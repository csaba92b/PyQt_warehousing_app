# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'runMe.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import background, sys
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    ls = []
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(371, 561)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 41, 91, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(20, 66, 51, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(20, 91, 81, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(121, 41, 181, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit.setFont(font)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(121, 67, 181, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(121, 93, 181, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(94, 140, 181, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(94, 180, 181, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(94, 220, 181, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(25, 280, 321, 231))
        self.listWidget.setObjectName("listWidget")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(30, 260, 47, 13))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(120, 260, 47, 13))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(200, 260, 47, 13))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(290, 260, 47, 13))
        self.label_7.setObjectName("label_7")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.pushButton.clicked.connect(self.saveToFile)
        self.pushButton_3.clicked.connect(self.show_button)
        self.pushButton_2.clicked.connect(self.show_prioritized)
        self.listWidget.itemClicked.connect(self.clicked_on)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Product:"))
        self.label_2.setText(_translate("MainWindow", "Price:"))
        self.label_3.setText(_translate("MainWindow", "Quantity:"))
        self.pushButton.setText(_translate("MainWindow", "Save to database"))
        self.pushButton_2.setText(_translate("MainWindow", "Prioritized products"))
        self.pushButton_3.setText(_translate("MainWindow", "Load the database"))
        self.label_4.setText(_translate("MainWindow", "Product:"))
        self.label_5.setText(_translate("MainWindow", "Price:"))
        self.label_6.setText(_translate("MainWindow", "Quantity:"))
        self.label_7.setText(_translate("MainWindow", "Priority:"))

    def saveToFile(self):
        name = self.lineEdit.text()
        price = self.lineEdit_2.text()
        quantity = self.lineEdit_3.text()
        try:
            if len(name) == 0:
                raise background.Badformat('name')
            try:
                mm = float(price)
            except:
                raise background.Badformat('price')
            if not quantity.isdigit():
                raise background.Badformat('quantity')
            else:
                a = background.Product(name, price, quantity)
                if len(self.ls) > 0:
                    change = False
                    for prod in self.ls:
                        if a.product == prod.product:
                            change = True
                            print('haho')
                            self.ls.remove(prod)
                            self.ls.append(a)
                            for i in self.ls:
                                print(i.__str__())
                            with open('warehouse_database.txt', 'w') as db:
                                for prod in self.ls:
                                    print(prod.__str__(),file=db)
                            self.show_button()
                            break
                    if not change:
                        print('no change')
                        with open('warehouse_database.txt', 'a') as aru:
                            print(a.__str__(), file=aru)
                else:
                    print('no ls')
                    with open('warehouse_database.txt', 'a') as aru:
                        print(a.__str__(),file=aru)

        except background.Badformat as bf:
            msg = QtWidgets.QMessageBox()
            msg.setWindowTitle('warning')
            msg.setIcon(QtWidgets.QMessageBox.Warning)
            msg.setText(bf.__str__())
            msg.exec()

    def show_button(self):
        self.ls.clear()
        self.listWidget.clear()
        with open('warehouse_database.txt', 'r') as db:
            for line in db:
                if line.count(',') == 2:
                    a,b,c = line.split(',')
                    self.ls.append(background.Product(a, b, c))
        if len(self.ls) > 0:
            self.ls.sort()
            for product in self.ls:
                self.listWidget.addItem(product.__str__()+',\t'+str(round(product.get_priority(),4)))


    def show_prioritized(self):
        max_ls = []
        maxp = ''
        if len(self.ls) > 0:
            for i in range(2):
                max = 0
                for product in self.ls:
                    if product not in max_ls:
                        if product.get_priority() > max:
                            max = product.get_priority()
                            maxp = product
                max_ls.append(maxp)
            msg = QtWidgets.QMessageBox()
            msg.setWindowTitle("warning!")
            msg.setIcon(QtWidgets.QMessageBox.Warning)
            msg.setText(f'{max_ls[0].__str__()} \n{max_ls[1].__str__()}')
            msg.exec()
        else:
            msg = QtWidgets.QMessageBox()
            msg.setWindowTitle('warning!')
            msg.setIcon(QtWidgets.QMessageBox.Warning)
            msg.setText(f'Click the show button first to load the database')
            msg.exec()

    def clicked_on(self):
        text = self.listWidget.currentItem().text()
        a,b,c,d = text.split(',')
        self.lineEdit.setText(a)
        self.lineEdit_2.setText(str(float(b)))
        self.lineEdit_3.setText(str(int(c)))









if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    mainw = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(mainw)

    mainw.show()
    sys.exit(app.exec())